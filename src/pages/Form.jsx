import React from "react";
import classes from "./Form.module.css"
import { useState } from "react";

function Form() {
    const [name, setName] = useState('');
    const [tel, setTel] = useState('');
    const [adress, setAdress] = useState('');
    const [size, setSize] = useState('');
    const [model, setModel] = useState('');
    const [NameMessage, setNameMessage] = useState('');
    const [TelMessage, setTelMessage] = useState('');
    const [AdressMessage, setAdressMessage] = useState('');
    const [SizeMessage, setSizeMessage] = useState('');
    const [isNameValid, setIsNameValid] = useState(false);
    const [isTelValid, setIsTelValid] = useState(false);
    const [isAdressValid, setIsAdressValid] = useState(false);
    const [isSizeValid, setIsSizeValid] = useState(false);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–µ–Ω–∏
    const checkName = (value) => {
        const regex = /^[–∞-—è–ê-–Ø\s]{3,60}$/; 
        if (regex.test(value)) {
            setNameMessage("–ò–º—è –≤–≤–µ–¥–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ :)");
            setIsNameValid(true);
        } else {
            setNameMessage("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 3-60 —Å–∏–º–≤–æ–ª–æ–≤");
            setIsNameValid(false);
        }
    };

    //–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const checkTel =  (value) => {
        const regex = /^\d{3}-\d{3}-\d{2}-\d{2}$/;
        if (regex.test(value)) { 
            setTelMessage("–¢–µ–ª–µ—Ñ–æ–Ω –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ :)");
            setIsTelValid(true);
        } else {
            setTelMessage("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥");
            setIsTelValid(false);
        }
    };

    //–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥—Ä–µ—Å–∞
    const checkAddress = (value) => {
        const regex = /^[–∞-—è–ê-–Ø0-9\s.,-]{5,200}$/;
        if (regex.test(value)) { 
            setAdressMessage("–ê–¥—Ä–µ—Å –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ :)");
            setIsAdressValid(true);
        } else {
            setAdressMessage("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ: —É–ª–∏—Ü—É, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä—É");
            setIsAdressValid(false);
        }
    };

    //–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–¥–µ–∂–¥—ã
    const checkSize = (value) => {
        const regex = /^(100|[1-9][0-9])$/;
        if (regex.test(value)) { 
            setSizeMessage("–†–∞–∑–º–µ—Ä –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ :)");
            setIsSizeValid(true);
        } else {
            setSizeMessage("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –¥–≤—É—Ö–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ");
            setIsSizeValid(false);
        }
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–≤–æ–¥–∞
    const handleChange = (e) => {
        const { name, value } = e.target; // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è
        if (name === 'name') {
            setName(value); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–º–µ–Ω–∏
            checkName(value); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è
        } else if (name === 'tel') {
            setTel(value); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            checkTel(value); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω
        } else if (name === 'adress') {
            setAdress(value); 
            checkAddress(value); 
        } else if (name === 'size') {
            setSize(value); 
            checkSize(value); 
        } else if (name === 'model') {
            setModel(value); 
        }
    };
    

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
      const handleSubmit = (e) => {
        e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
        if (isNameValid && isTelValid && isAdressValid && isSizeValid) {
            alert(`–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ ${name}!\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞:\n` +
            `–§–ò–û: ${name}\n` +
            `–¢–µ–ª–µ—Ñ–æ–Ω: ${tel}\n` +
            `–ê–¥—Ä–µ—Å: ${adress}\n` +
            `–†–∞–∑–º–µ—Ä: ${size}\n` +
            `–ú–æ–¥–µ–ª—å –æ–¥–µ–∂–¥—ã: ${model}\n` +
            `–ï—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ, –º—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–∏—é –≤–∞—à–µ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –≤–µ—â–∏. –ú—ã —Å–¥–µ–ª–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã –≤—ã –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã! üíñ`);
        }
    };

    return(
        <>
            <div className={classes.Form}>
            <h2>–§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞</h2>
                <form onSubmit={handleSubmit}>
                    <input type="text" name="name" placeholder="–§–ò–û" value={name} onChange={handleChange} onBlur={() => checkName(name)} // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞ 
                    required />
                    {NameMessage && <span className={isNameValid ? classes.valid : classes.invalid}>{NameMessage}</span>} {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ */} <br/>

                    <input type="tel" name="tel" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω xxx-xxx-xx-xx" value={tel} onChange={handleChange} onBlur={() => checkTel(tel)} required />
                    {TelMessage && <span className={isTelValid ? classes.valid : classes.invalid}>{TelMessage}</span>} <br/>

                    <input type="text" name="adress" placeholder="–ê–¥—Ä–µ—Å" value={adress} onChange={handleChange} onBlur={() => checkAddress(adress)} required/>
                    {AdressMessage && <span className={isAdressValid ? classes.valid : classes.invalid}>{AdressMessage}</span>} <br/>

                    <input type="text" name="size" placeholder="–†–∞–∑–º–µ—Ä –æ–¥–µ–∂–¥—ã"  value={size} onChange={handleChange} onBlur={() => checkSize(size)} required/>
                    {SizeMessage && <span className={isSizeValid ? classes.valid : classes.invalid}>{SizeMessage}</span>}<br/>

                    <select name="model" value={model} onChange={handleChange} required>
                        <option value="" disabled>–ú–æ–¥–µ–ª—å —Ç–æ–≤–∞—Ä–∞</option>
                        <option value="–ó–≤–µ–∑–¥–Ω–∞—è –Ω–æ—á—å">–ó–≤–µ–∑–¥–Ω–∞—è –Ω–æ—á—å</option>
                        <option value="–¢–µ–º–Ω—ã–π –ø—É—Ç—å">–¢–µ–º–Ω—ã–π –ø—É—Ç—å</option>
                        <option value="–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –Ω–∞ –∑–∞–∫–∞–∑</option>
                    </select><br/>
                    <button type="submit" disabled={!(isNameValid && isTelValid && isAdressValid && isSizeValid)}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                </form>
            </div>
        </>
    );
}

export default Form;